// Mocks generated by Mockito 5.4.5 from annotations
// in trinity/test/screens/login_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:trinity/type/user.dart' as _i3;
import 'package:trinity/utils/api/auth.dart' as _i4;
import 'package:trinity/utils/api/user.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_1 extends _i1.SmartFake implements _i3.User {
  _FakeUser_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i4.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Response<dynamic>> login(String? username, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#login, [username, password]),
            returnValue: _i5.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(#login, [username, password]),
              ),
            ),
          )
          as _i5.Future<_i2.Response<dynamic>>);

  @override
  _i5.Future<_i2.Response<dynamic>> register({
    required String? firstName,
    required String? lastName,
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#register, [], {
              #firstName: firstName,
              #lastName: lastName,
              #email: email,
              #password: password,
            }),
            returnValue: _i5.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(#register, [], {
                  #firstName: firstName,
                  #lastName: lastName,
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i5.Future<_i2.Response<dynamic>>);
}

/// A class which mocks [UserApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserApi extends _i1.Mock implements _i6.UserApi {
  MockUserApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.User> getUser() =>
      (super.noSuchMethod(
            Invocation.method(#getUser, []),
            returnValue: _i5.Future<_i3.User>.value(
              _FakeUser_1(this, Invocation.method(#getUser, [])),
            ),
          )
          as _i5.Future<_i3.User>);

  @override
  _i5.Future<_i3.User> getUserDetails() =>
      (super.noSuchMethod(
            Invocation.method(#getUserDetails, []),
            returnValue: _i5.Future<_i3.User>.value(
              _FakeUser_1(this, Invocation.method(#getUserDetails, [])),
            ),
          )
          as _i5.Future<_i3.User>);
}
